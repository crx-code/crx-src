// vim:ft=javascript

ARG_WITH("pdo-mysql", "MySQL support for PDO", "no");

if (CRX_PDO_MYSQL != "no") {
	if (CRX_PDO_MYSQL == "yes" || CRX_PDO_MYSQL == "mysqlnd") {
		AC_DEFINE('PDO_USE_MYSQLND', 1, 'Using MySQL native driver');
		STDOUT.WriteLine("INFO: mysqlnd build");
		EXTENSION("pdo_mysql", "pdo_mysql.c mysql_driver.c mysql_statement.c");
		ADD_EXTENSION_DEP('pdo_mysql', 'pdo');
	} else {
		if (CHECK_LIB("libmysql.lib", "pdo_mysql", CRX_PDO_MYSQL) &&
				CHECK_HEADER_ADD_INCLUDE("mysql.h", "CFLAGS_PDO_MYSQL",
					CRX_PDO_MYSQL + "\\include;" +
					CRX_CRX_BUILD + "\\include\\mysql;" +
					CRX_PDO_MYSQL)) {
			EXTENSION("pdo_mysql", "pdo_mysql.c mysql_driver.c mysql_statement.c", null, "/DCREX_ENABLE_STATIC_TSRMLS_CACHE=1");
		} else {
			WARNING("pdo_mysql not enabled; libraries and headers not found");
		}
	}
}
