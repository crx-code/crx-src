--TEST--
Crxa: create and modify crxa
--EXTENSIONS--
crxa
--INI--
crxa.readonly=0
crxa.require_hash=1
opcache.validate_timestamps=1
--FILE--
<?crx

$fname = __DIR__ . '/' . basename(__FILE__, '.crx') . '.crxa.crx';
$pname = 'crxa://' . $fname;

@unlink($fname);

file_put_contents($pname . '/a.crx', "brand new!\n");

$crxa = new Crxa($fname);
$sig1 = $crxa->getSignature();

include $pname . '/a.crx';

if (function_exists("opcache_get_status")) {
    $status = opcache_get_status();
    if (is_array($status) && ($status["opcache_enabled"] || (isset($status["file_cache_only"]) && $status["file_cache_only"]))) {
        opcache_invalidate($pname . '/a.crx', true);
        // opcache_invalidate is buggy and doesn't work as expected so we add a
        // minor delay here.
        sleep(2);
    }
}

file_put_contents($pname .'/a.crx', "modified!\n");
file_put_contents($pname .'/b.crx', "another!\n");

$crxa = new Crxa($fname);
$sig2 = $crxa->getSignature();

var_dump($sig1['hash']);
var_dump($sig2['hash']);
var_dump($sig1['hash'] != $sig2['hash']);

include $pname . '/a.crx';
include $pname . '/b.crx';

?>
--CLEAN--
<?crx unlink(__DIR__ . '/' . basename(__FILE__, '.clean.crx') . '.crxa.crx'); ?>
--EXPECTF--
brand new!
string(%d) "%s"
string(%d) "%s"
bool(true)
modified!
another!
