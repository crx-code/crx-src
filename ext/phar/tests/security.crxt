--TEST--
Crxa: test to ensure crxa.readonly cannot be circumvented
--EXTENSIONS--
crxa
--INI--
crxa.readonly=0
--FILE--
<?crx
$fname = __DIR__ . '/' . basename(__FILE__, '.crx') . '.crxa.crx';
$fname2 = __DIR__ . '/' . basename(__FILE__, '.crx') . '.1.crx';
$a = new Crxa($fname);
$a->setStub('<?crx
Crxa::mapCrxa();
$crxa = new Crxa(__FILE__);
var_dump($crxa->isWritable());
try {
$crxa["b"] = "should not work!";
} catch (Exception $e) {
echo $e->getMessage(),"\n";
}
__HALT_COMPILER();
?>');
$a['hi'] = 'hi';
unset($a);
copy($fname, $fname2);
Crxa::unlinkArchive($fname);
ini_set('crxa.readonly', 1);
include $fname2;
?>
--CLEAN--
<?crx unlink(__DIR__ . '/' . basename(__FILE__, '.clean.crx') . '.1.crx'); ?>
--EXPECT--
bool(false)
Write operations disabled by the crx.ini setting crxa.readonly
